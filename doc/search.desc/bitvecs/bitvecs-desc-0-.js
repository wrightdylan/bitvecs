searchState.loadedDescShard("bitvecs", 0, "Bit Vector\nConverts the vector from bytes to ascii characters when …\nReturns a new BitVector containing the difference between …\nCompletely fill the BitVector with either true or false\nGenerate a new BitVector from an array\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the bit value at the desired index\nGet the bit index (typically used for reading)\nGet the byte index (typically used for reading)\nGet current reading position in bits\nReturns a new BitVector containing the intersection …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDeprecated as the name is misleading and does not match …\nChecks if all bytes are zero\nGet the current capacity in bytes\nGet the number of bits stored in the vector (always less …\nConstructs a new, empty, BitVec.\nFinds the next set bit in a BitVector from a start index …\nRemoves and returns the last bit in the vector\nRemoves and returns the last byte in the vector regardless …\nRemoves and returns the last (complete) byte in the vector\nPushes a bit to the vector\nPushes a byte to the vector\nDeprecated as the name is too similar to a new function\nReads 8 bits in sequence and returns a byte (can be offset)\nReset sequential reading position\nThis is a sequential read which increments the bit index, …\nSets the bit at the desired index. If the bit to be set is …\nSet reading position in bits\nReturns a new BitVector containing the union between two …\nConstructs a new, empty, BitVec, with at least the …")